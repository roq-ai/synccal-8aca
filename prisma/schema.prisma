generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  city        String?   @db.VarChar(255)
  state       String?   @db.VarChar(255)
  zip_code    String?   @db.VarChar(10)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  content     content[]
}

model content {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String     @db.VarChar(255)
  body         String?
  status       String?    @db.VarChar(255)
  publish_date DateTime?  @db.Timestamp(6)
  user_id      String     @db.Uuid
  business_id  String     @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  business     business   @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  schedule     schedule[]
}

model content_category {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model notification_settings {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model platform_integration {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model post_template {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model reminder {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  schedule_id   String   @db.Uuid
  reminder_date DateTime @db.Timestamp(6)
  message       String?  @db.VarChar(255)
  user_id       String   @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  schedule      schedule @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model schedule {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_id      String       @db.Uuid
  social_media_id String       @db.Uuid
  schedule_date   DateTime     @db.Timestamp(6)
  status          String?      @db.VarChar(255)
  user_id         String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  reminder        reminder[]
  content         content      @relation(fields: [content_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  social_media    social_media @relation(fields: [social_media_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model social_media {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  platform        String     @db.VarChar(255)
  profile_url     String?    @db.VarChar(255)
  followers_count Int?
  following_count Int?
  post_count      Int?
  user_id         String     @db.Uuid
  created_at      DateTime   @default(now()) @db.Timestamp(6)
  updated_at      DateTime   @default(now()) @db.Timestamp(6)
  schedule        schedule[]
  user            user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  business     business[]
  content      content[]
  reminder     reminder[]
  schedule     schedule[]
  social_media social_media[]
}

model user_preferences {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}
